name: Release to PyPI

on:
  push:
    tags:
      - "v*"  # Run when any tag starting with 'v' is pushed
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-and-publish:
    name: Build and publish to PyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for trusted publishing
      contents: write  # Required for creating GitHub releases
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          
      - name: Extract version from tag
        if: startsWith(github.ref, 'refs/tags/')
        id: get_version
        run: |
          # Extract version from tag (remove 'v' prefix)
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version extracted: $VERSION"
          
      - name: Update version in setup.py
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          # Replace version in setup.py
          sed -i "s/version=\"[^\"]*\"/version=\"$VERSION\"/" setup.py
          echo "Updated version in setup.py to $VERSION"
          
      - name: Update version in pyproject.toml
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          # Replace version in pyproject.toml (matches the version in the [project] section)
          sed -i "s/version = \"[^\"]*\"/version = \"$VERSION\"/" pyproject.toml
          echo "Updated version in pyproject.toml to $VERSION"

      - name: Install dependencies
        run: |
          poetry install --no-interaction

      - name: Build package
        run: |
          poetry build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          generate_release_notes: true